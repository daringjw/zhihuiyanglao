apply plugin: 'com.android.application'

android {

    // productFlavors是为了避免每次运行都把DEX重新加载一遍而设置的两套运行配置
   /* productFlavors {
        dev {
            minSdkVersion 21
        }
        prod {
            minSdkVersion 14
        }
    }*/


    signingConfigs {
        release {
            keyAlias 'grid'
            keyPassword 'jkkcjkkc'
            storeFile file('../gridmember.jks')
            storePassword 'jkkcjkkc'
        }
    }


    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.jkkc.gridmember"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 14
        versionName "1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // 设置MultiDex可用
        multiDexEnabled true

        ndk {
            //设置支持的SO库架构
            ndk {
                abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.release
        }

        android.applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    //这里修改apk文件名
                    def fileName = outputFile.name.replace("app",
                            "${defaultConfig.applicationId}(build${defaultConfig.versionCode})")
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }

    }

    // 保证其他的lib没有被preDex
    dexOptions {

        javaMaxHeapSize "4g"
        preDexLibraries = false

    }

    sourceSets{
        main{
            jniLibs.srcDirs = ['libs']
            //说明so的路径为该libs路径，关联所有地图SDK的so文件
        }
    }

}

apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'dexknifePlus'

dexKnife{
    //必选参数
    enabled true //if false,禁用分包插件
    //可选参数
    //1.如果没有可选参数，将根据enabled决定是否分包。
    //2.如果有可选参数，需满足必选参数和可选参数的条件才允许分包
    productFlavor 'mock'
    buildType 'debug'

    /*
    *eg:当前productFlavors = dev，buildType = debug，
    *参数组合1：enabled = true，productFlavor = dev，buildType = debug 分包
    *参数组合2：enabled = true，productFlavor = mock，buildType = debug 不分包
    *参数组合1：enabled = true，buildType = debug 所有buildType = debug分包
    *参数组合1：enabled = true，productFlavor = dev 所有productFlavor = dev分包
    * */
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:design:23.3.0'


    //
    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4-7'
    compile 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.4-7'//没有使用特殊Header，可以不加这行

    compile 'com.android.support:appcompat-v7:23.3.0'//版本随意（必须）
    compile 'com.android.support:design:23.3.0'//版本随意（非必须，引用可以解决无法预览问题）

//1.0.4 出现问题可以回退到 1.0.3
    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.3'
    compile 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.3'//没有使用特殊Header，可以不加这行

    //必须使用
    compile 'com.lzy.net:okgo:3.0.4'



    compile 'com.google.code.gson:gson:2.6.+'
    apt 'com.jakewharton:butterknife-compiler:8.0.1'
    compile 'com.jakewharton:butterknife:8.0.1'
    compile files('libs/BaiduLBS_Android.jar')
    // MultiDex的依赖
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.hyphenate:hyphenate-sdk:3.3.0'
    compile 'com.lovedise:permissiongen:0.0.6'
    compile 'cn.pedant.sweetalert:library:1.3'
    compile 'org.greenrobot:eventbus:3.0.0'

    //注释掉原有bugly的仓库
    //compile 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.3.2
    compile 'com.tencent.bugly:crashreport_upgrade:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
    compile 'com.tencent.bugly:nativecrashreport:latest.release' //其中latest.release指代最新版本号，

    compile 'com.blankj:utilcode:1.11.1'

    compile 'com.android.support:recyclerview-v7:23.+'

    compile 'com.zfdang.multiple-images-selector:multiple-images-selector:1.+'






}
